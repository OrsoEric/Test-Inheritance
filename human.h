/**********************************************************************************
**	ENVIROMENT VARIABILE
**********************************************************************************/

#ifndef HUMAN_H_
	#define HUMAN_H_

/**********************************************************************************
**	GLOBAL INCLUDES
**********************************************************************************/

//Standard C++ libraries
#include <array>	//for std::array
#include <string>	//for std::string

/**********************************************************************************
**	DEFINES
**********************************************************************************/

//Age limits of a human
#define MIN_AGE				0
#define MAX_AGE				110
//Name limitations
#define MAX_NAME_LENGTH		50

/**********************************************************************************
**	MACROS
**********************************************************************************/

#define GENDER_TO_STR( f )	\
	(((f)==true)?("male"):("female"))

/**********************************************************************************
**	TYPEDEF
**********************************************************************************/

/**********************************************************************************
**	PROTOTYPE: STRUCTURE
**********************************************************************************/

/**********************************************************************************
**	PROTOTYPE: GLOBAL VARIABILE
**********************************************************************************/

/**********************************************************************************
**	NAMESPACE
**********************************************************************************/

//Assign class to a namespace
namespace User
{

/**********************************************************************************
**	PROTOTYPE: CLASS
**********************************************************************************/

/****************************************************************************
**	Class
**
*****************************************************************************
**	PARAMETER:
**	RETURN:
**	DESCRIPTION:
****************************************************************************/

class Human
{
	//Visible to all
	public:

		///--------------------------------------------------------------------------
		///	CONSTRUCTORS
		///--------------------------------------------------------------------------

		//Empty constructor
		Human( void );
		//Initialized constructor
		Human( bool f_male, int age, std::string name );

		///--------------------------------------------------------------------------
		///	DESTRUCTORS
		///--------------------------------------------------------------------------

		//Default destructor
		~Human( void );

		///--------------------------------------------------------------------------
		///	SETTERS
		///--------------------------------------------------------------------------

		//set the age of the human
		bool set_age( int age );
		//set the gender of the human
		bool set_gender( bool f_male );
		//set the name of the human
		bool set_name( std::string name );

		///--------------------------------------------------------------------------
		///	GETTERS
		///--------------------------------------------------------------------------

		//Get the age of the human
		int get_age( void );
		//get the gender of the human
		bool get_gender( void );
		//get the name of the human
		std::string get_name( void );

		///--------------------------------------------------------------------------
		///	TESTERS
		///--------------------------------------------------------------------------

		///--------------------------------------------------------------------------
		///	PUBLIC METHODS
		///--------------------------------------------------------------------------

		//Show Human parameters
		bool show( void );

		///--------------------------------------------------------------------------
		///	PUBLIC VARS
		///--------------------------------------------------------------------------

		const int min_age = 0;

	//Visible to derived classes
	protected:
		///--------------------------------------------------------------------------
		///	PROTECTED METHODS
		///--------------------------------------------------------------------------

		///--------------------------------------------------------------------------
		///	PROTECTED VARS
		///--------------------------------------------------------------------------

	//Visible only inside the class
	private:
		///--------------------------------------------------------------------------
		///	PRIVATE METHODS
		///--------------------------------------------------------------------------

		//Here so that i can easly copy the code.
		bool dummy( void );

		///--------------------------------------------------------------------------
		///	PRIVATE VARS
		///--------------------------------------------------------------------------

		//true = the human is male. | false = the human is female
		bool g_f_male;
		//age of the human
		int g_age;
		//name of the human
		std::array<char, MAX_NAME_LENGTH> g_name;

};	//End Class: Human

/**********************************************************************************
**	NAMESPACE
**********************************************************************************/

} //End Namespace

#else
    #warning "Multiple inclusion of hader file"
#endif
